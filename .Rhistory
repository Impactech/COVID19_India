mutate(Type = 'Recovered') %>%
d3 <- read_csv(jhu_url_deaths) %>%
mutate(Type = 'Hospitalized') %>%
d <- rbind(d1, d2, d3) %>%
rename(StateUt = "Province/State", Country = "Country/Region") %>%
pivot_longer(-c(Type, StateUt, Country, Lat, Long), names_to = "Date", values_to = "Total")
jhu_url_confirmed <- paste("https://raw.githubusercontent.com/CSSEGISandData/",
"COVID-19/master/csse_covid_19_data/", "csse_covid_19_time_series/",
"time_series_covid19_confirmed_global.csv", sep = "")
jhu_url_recovered <- paste("https://raw.githubusercontent.com/CSSEGISandData/",
"COVID-19/master/csse_covid_19_data/", "csse_covid_19_time_series/",
"time_series_covid19_recovered_global.csv", sep = "")
jhu_url_deaths <- paste("https://raw.githubusercontent.com/CSSEGISandData/",
"COVID-19/master/csse_covid_19_data/", "csse_covid_19_time_series/",
"time_series_covid19_deaths_global.csv", sep = "")
d1 <- read_csv(jhu_url_confirmed) %>%
mutate(Type = 'Total')
d2 <- read_csv(jhu_url_recovered) %>%
mutate(Type = 'Recovered')
d3 <- read_csv(jhu_url_deaths) %>%
mutate(Type = 'Hospitalized')
d <- rbind(d1, d2, d3) %>%
rename(StateUt = "Province/State", Country = "Country/Region") %>%
pivot_longer(-c(Type, StateUt, Country, Lat, Long), names_to = "Date", values_to = "Total")
View(d)
jhu_url_confirmed <- paste("https://raw.githubusercontent.com/CSSEGISandData/",
"COVID-19/master/csse_covid_19_data/", "csse_covid_19_time_series/",
"time_series_covid19_confirmed_global.csv", sep = "")
jhu_url_recovered <- paste("https://raw.githubusercontent.com/CSSEGISandData/",
"COVID-19/master/csse_covid_19_data/", "csse_covid_19_time_series/",
"time_series_covid19_recovered_global.csv", sep = "")
jhu_url_deaths <- paste("https://raw.githubusercontent.com/CSSEGISandData/",
"COVID-19/master/csse_covid_19_data/", "csse_covid_19_time_series/",
"time_series_covid19_deaths_global.csv", sep = "")
d1 <- read_csv(jhu_url_confirmed) %>%
mutate(Type = 'Total')
d2 <- read_csv(jhu_url_recovered) %>%
mutate(Type = 'Recovered')
d3 <- read_csv(jhu_url_deaths) %>%
mutate(Type = 'Hospitalized')
d <- rbind(d1, d2, d3) %>%
rename(StateUt = "Province/State", Country = "Country/Region")
View(d)
jhu_url_confirmed <- paste("https://raw.githubusercontent.com/CSSEGISandData/",
"COVID-19/master/csse_covid_19_data/", "csse_covid_19_time_series/",
"time_series_covid19_confirmed_global.csv", sep = "")
jhu_url_recovered <- paste("https://raw.githubusercontent.com/CSSEGISandData/",
"COVID-19/master/csse_covid_19_data/", "csse_covid_19_time_series/",
"time_series_covid19_recovered_global.csv", sep = "")
jhu_url_deaths <- paste("https://raw.githubusercontent.com/CSSEGISandData/",
"COVID-19/master/csse_covid_19_data/", "csse_covid_19_time_series/",
"time_series_covid19_deaths_global.csv", sep = "")
d1 <- read_csv(jhu_url_confirmed) %>%
mutate(Type = 'Total')
d2 <- read_csv(jhu_url_recovered) %>%
mutate(Type = 'Recovered')
d3 <- read_csv(jhu_url_deaths) %>%
mutate(Type = 'Hospitalized')
d <- rbind(d1, d2, d3) %>%
rename(StateUt = "Province/State", Country = "Country/Region")
View(d)
colnames(d)
d <- rbind(d1, d2, d3) %>%
rename(StateUt = "Province/State", Country = "Country/Region") %>%
pivot_longer(-c(Type, StateUt, Country, Lat, Long), names_to = "Date", values_to = "Total")
View(d)
?pivot_wider
d <- rbind(d1, d2, d3) %>%
rename(StateUt = "Province/State", Country = "Country/Region") %>%
pivot_longer(-c(Type, StateUt, Country, Lat, Long), names_to = "Date", values_to = "Total") %?%
pivot_wider(names_from = Type, values_from = Total, values_fill = list(Total = 0))
d <- rbind(d1, d2, d3) %>%
rename(StateUt = "Province/State", Country = "Country/Region") %>%
pivot_longer(-c(Type, StateUt, Country, Lat, Long), names_to = "Date", values_to = "Total") %>%
pivot_wider(names_from = Type, values_from = Total, values_fill = list(Total = 0))
View(d)
d1 <- read_csv(jhu_url_confirmed) %>%
mutate(Type = 'Total')
d2 <- read_csv(jhu_url_recovered) %>%
mutate(Type = 'Recovered')
d3 <- read_csv(jhu_url_deaths) %>%
mutate(Type = 'Deaths')
d <- rbind(d1, d2, d3) %>%
rename(StateUt = "Province/State", Country = "Country/Region") %>%
pivot_longer(-c(Type, StateUt, Country, Lat, Long), names_to = "Date", values_to = "Total") %>%
pivot_wider(names_from = Type, values_from = Total, values_fill = list(Total = 0)) %>%
mutate(Hospitalized = Total-Recovered-Deaths)
jhu_url_confirmed <- paste("https://raw.githubusercontent.com/CSSEGISandData/",
"COVID-19/master/csse_covid_19_data/", "csse_covid_19_time_series/",
"time_series_covid19_confirmed_global.csv", sep = "")
jhu_url_recovered <- paste("https://raw.githubusercontent.com/CSSEGISandData/",
"COVID-19/master/csse_covid_19_data/", "csse_covid_19_time_series/",
"time_series_covid19_recovered_global.csv", sep = "")
jhu_url_deaths <- paste("https://raw.githubusercontent.com/CSSEGISandData/",
"COVID-19/master/csse_covid_19_data/", "csse_covid_19_time_series/",
"time_series_covid19_deaths_global.csv", sep = "")
d1 <- read_csv(jhu_url_confirmed) %>%
mutate(Type = 'Total')
d2 <- read_csv(jhu_url_recovered) %>%
mutate(Type = 'Recovered')
d3 <- read_csv(jhu_url_deaths) %>%
mutate(Type = 'Deaths')
d <- rbind(d1, d2, d3) %>%
rename(StateUt = "Province/State", Country = "Country/Region") %>%
pivot_longer(-c(Type, StateUt, Country, Lat, Long), names_to = "Date", values_to = "Total") %>%
pivot_wider(names_from = Type, values_from = Total, values_fill = list(Total = 0)) %>%
mutate(Hospitalized = Total-Recovered-Deaths)
View(d)
jhu_url_confirmed <- paste("https://raw.githubusercontent.com/CSSEGISandData/",
"COVID-19/master/csse_covid_19_data/", "csse_covid_19_time_series/",
"time_series_covid19_confirmed_global.csv", sep = "")
jhu_url_recovered <- paste("https://raw.githubusercontent.com/CSSEGISandData/",
"COVID-19/master/csse_covid_19_data/", "csse_covid_19_time_series/",
"time_series_covid19_recovered_global.csv", sep = "")
jhu_url_deaths <- paste("https://raw.githubusercontent.com/CSSEGISandData/",
"COVID-19/master/csse_covid_19_data/", "csse_covid_19_time_series/",
"time_series_covid19_deaths_global.csv", sep = "")
d1 <- read_csv(jhu_url_confirmed) %>%
mutate(Type = 'Total')
d2 <- read_csv(jhu_url_recovered) %>%
mutate(Type = 'Recovered')
d3 <- read_csv(jhu_url_deaths) %>%
mutate(Type = 'Deaths')
d <- rbind(d1, d2, d3) %>%
rename(StateUt = "Province/State", Country = "Country/Region") %>%
pivot_longer(-c(Type, StateUt, Country, Lat, Long), names_to = "Date", values_to = "Total") %>%
pivot_wider(names_from = Type, values_from = Total, values_fill = list(Total = 0)) %>%
mutate(Hospitalized = Total-Recovered-Deaths)
rm(d1, d2, d3)
source('./source_world_data.r')
d <- source_world_data()
source('./source_world_data.r')
d <- source_world_data()
View(d)
d1 <- read_csv(jhu_url_confirmed) %>%
mutate(Type = 'Total')
d2 <- read_csv(jhu_url_recovered) %>%
mutate(Type = 'Recovered')
d3 <- read_csv(jhu_url_deaths) %>%
mutate(Type = 'Deaths')
d <- rbind(d1, d2, d3) %>%
rename(StateUt = "Province/State", Country = "Country/Region") %>%
pivot_longer(-c(Type, StateUt, Country, Lat, Long), names_to = "Date", values_to = "Total") %>%
pivot_wider(names_from = Type, values_from = Total, values_fill = list(Total = 0)) %>%
mutate(Hospitalized = Total-Recovered-Deaths) %>% mutate(Date = mdy(Date))
jhu_url_confirmed <- paste("https://raw.githubusercontent.com/CSSEGISandData/",
"COVID-19/master/csse_covid_19_data/", "csse_covid_19_time_series/",
"time_series_covid19_confirmed_global.csv", sep = "")
jhu_url_recovered <- paste("https://raw.githubusercontent.com/CSSEGISandData/",
"COVID-19/master/csse_covid_19_data/", "csse_covid_19_time_series/",
"time_series_covid19_recovered_global.csv", sep = "")
jhu_url_deaths <- paste("https://raw.githubusercontent.com/CSSEGISandData/",
"COVID-19/master/csse_covid_19_data/", "csse_covid_19_time_series/",
"time_series_covid19_deaths_global.csv", sep = "")
d1 <- read_csv(jhu_url_confirmed) %>%
mutate(Type = 'Total')
d2 <- read_csv(jhu_url_recovered) %>%
mutate(Type = 'Recovered')
d3 <- read_csv(jhu_url_deaths) %>%
mutate(Type = 'Deaths')
d <- rbind(d1, d2, d3) %>%
rename(StateUt = "Province/State", Country = "Country/Region") %>%
pivot_longer(-c(Type, StateUt, Country, Lat, Long), names_to = "Date", values_to = "Total") %>%
pivot_wider(names_from = Type, values_from = Total, values_fill = list(Total = 0)) %>%
mutate(Hospitalized = Total-Recovered-Deaths) %>% mutate(Date = mdy(Date))
View(d)
d1 <- read_csv(jhu_url_confirmed) %>%
mutate(Type = 'Total')
d2 <- read_csv(jhu_url_recovered) %>%
mutate(Type = 'Recovered')
d3 <- read_csv(jhu_url_deaths) %>%
mutate(Type = 'Deaths')
d <- rbind(d1, d2, d3) %>%
rename(StateUt = "Province/State", Country = "Country/Region") %>%
pivot_longer(-c(Type, StateUt, Country, Lat, Long), names_to = "Date", values_to = "Total") %>%
pivot_wider(names_from = Type, values_from = Total, values_fill = list(Total = 0)) %>%
mutate(Hospitalized = Total-Recovered-Deaths) %>% mutate(Date = dmy(Date))
jhu_url_confirmed <- paste("https://raw.githubusercontent.com/CSSEGISandData/",
"COVID-19/master/csse_covid_19_data/", "csse_covid_19_time_series/",
"time_series_covid19_confirmed_global.csv", sep = "")
jhu_url_recovered <- paste("https://raw.githubusercontent.com/CSSEGISandData/",
"COVID-19/master/csse_covid_19_data/", "csse_covid_19_time_series/",
"time_series_covid19_recovered_global.csv", sep = "")
jhu_url_deaths <- paste("https://raw.githubusercontent.com/CSSEGISandData/",
"COVID-19/master/csse_covid_19_data/", "csse_covid_19_time_series/",
"time_series_covid19_deaths_global.csv", sep = "")
d1 <- read_csv(jhu_url_confirmed) %>%
mutate(Type = 'Total')
d2 <- read_csv(jhu_url_recovered) %>%
mutate(Type = 'Recovered')
d3 <- read_csv(jhu_url_deaths) %>%
mutate(Type = 'Deaths')
d <- rbind(d1, d2, d3) %>%
rename(StateUt = "Province/State", Country = "Country/Region") %>%
pivot_longer(-c(Type, StateUt, Country, Lat, Long), names_to = "Date", values_to = "Total") %>%
pivot_wider(names_from = Type, values_from = Total, values_fill = list(Total = 0)) %>%
mutate(Hospitalized = Total-Recovered-Deaths) %>% mutate(Date = mdy(Date))
d <- source_world_data()
d <- source_world_data()
source('./source_world_data.r')
d <- source_world_data()
View(d)
View(d)
data_total <- d %>%
group_by(Date) %>% summarize(
Total = sum(Total))
View(data_total)
data_total <- d %>%
group_by(Date) %>% summarize(
Total = sum(Total))  %>%
mutate( TotalPrev = lag(total, default = 0, order_by = Date), DatePrev = lag(Date, order_by = Date))
data_total <- d %>%
group_by(Date) %>% summarize(
Total = sum(Total))  %>%
mutate(
TotalPrev = lag(Total, default = 0, order_by = Date),
DatePrev = lag(Date, order_by = Date))
View(data_total)
data_total <- d %>%
group_by(Date) %>% summarize(
Total = sum(Total))  %>%
mutate(
TotalPrev = lag(Total, default = 0, order_by = mdy(Date) ),
DatePrev = lag(Date, order_by = mdy(Date) ))
View(data_total)
jhu_url_confirmed <- paste("https://raw.githubusercontent.com/CSSEGISandData/",
"COVID-19/master/csse_covid_19_data/", "csse_covid_19_time_series/",
"time_series_covid19_confirmed_global.csv", sep = "")
jhu_url_recovered <- paste("https://raw.githubusercontent.com/CSSEGISandData/",
"COVID-19/master/csse_covid_19_data/", "csse_covid_19_time_series/",
"time_series_covid19_recovered_global.csv", sep = "")
jhu_url_deaths <- paste("https://raw.githubusercontent.com/CSSEGISandData/",
"COVID-19/master/csse_covid_19_data/", "csse_covid_19_time_series/",
"time_series_covid19_deaths_global.csv", sep = "")
d1 <- read_csv(jhu_url_confirmed) %>%
mutate(Type = 'Total')
d2 <- read_csv(jhu_url_recovered) %>%
mutate(Type = 'Recovered')
d3 <- read_csv(jhu_url_deaths) %>%
mutate(Type = 'Deaths')
d <- rbind(d1, d2, d3) %>%
rename(StateUt = "Province/State", Country = "Country/Region") %>%
pivot_longer(-c(Type, StateUt, Country, Lat, Long), names_to = "Date", values_to = "Total") %>%
pivot_wider(names_from = Type, values_from = Total, values_fill = list(Total = 0)) %>%
mutate(Hospitalized = Total-Recovered-Deaths) %>% mutate( Date = as.Date(Date, format="%m/%d/%Y") )
rm(d1, d2, d3)
View(d)
d <- rbind(d1, d2, d3) %>%
rename(StateUt = "Province/State", Country = "Country/Region") %>%
pivot_longer(-c(Type, StateUt, Country, Lat, Long), names_to = "Date", values_to = "Total") %>%
pivot_wider(names_from = Type, values_from = Total, values_fill = list(Total = 0)) %>%
mutate(Hospitalized = Total-Recovered-Deaths)
jhu_url_confirmed <- paste("https://raw.githubusercontent.com/CSSEGISandData/",
"COVID-19/master/csse_covid_19_data/", "csse_covid_19_time_series/",
"time_series_covid19_confirmed_global.csv", sep = "")
jhu_url_recovered <- paste("https://raw.githubusercontent.com/CSSEGISandData/",
"COVID-19/master/csse_covid_19_data/", "csse_covid_19_time_series/",
"time_series_covid19_recovered_global.csv", sep = "")
jhu_url_deaths <- paste("https://raw.githubusercontent.com/CSSEGISandData/",
"COVID-19/master/csse_covid_19_data/", "csse_covid_19_time_series/",
"time_series_covid19_deaths_global.csv", sep = "")
d1 <- read_csv(jhu_url_confirmed) %>%
mutate(Type = 'Total')
d2 <- read_csv(jhu_url_recovered) %>%
mutate(Type = 'Recovered')
d3 <- read_csv(jhu_url_deaths) %>%
mutate(Type = 'Deaths')
d <- rbind(d1, d2, d3) %>%
rename(StateUt = "Province/State", Country = "Country/Region") %>%
pivot_longer(-c(Type, StateUt, Country, Lat, Long), names_to = "Date", values_to = "Total") %>%
pivot_wider(names_from = Type, values_from = Total, values_fill = list(Total = 0)) %>%
mutate(Hospitalized = Total-Recovered-Deaths)
View(d)
d <- rbind(d1, d2, d3) %>%
rename(StateUt = "Province/State", Country = "Country/Region") %>%
pivot_longer(-c(Type, StateUt, Country, Lat, Long), names_to = "Date", values_to = "Total") %>%
pivot_wider(names_from = Type, values_from = Total, values_fill = list(Total = 0)) %>%
mutate(Hospitalized = Total-Recovered-Deaths) %>% mutate( Date = as.Date(Date, format="%m/%d/%y") )
View(d)
source('~/work/covid19/covid19_timeseries_animation/GlobalGrowthRate.R')
d <- source_world_data()
d <- source_world_data()
data_total <- d %>%
group_by(Date) %>% summarize(
Total = sum(Total))
data_total <- d %>%
group_by(Date) %>% summarize(
Total = sum(Total))  %>%
mutate(
TotalPrev = lag(Total, default = 0, order_by = Date ),
DatePrev = lag(Date, order_by = Date ))
View(data_total)
data_total <- d %>%
group_by(Date) %>% summarize(
Total = sum(Total))  %>%
mutate(TotalPrev = lag(Total, default = 0, order_by = Date ), DatePrev = lag(Date, order_by = Date )) %>%
filter(is.na(DatePrev)) %>%
mutate( Rate1 = (Total - TotalPrev)*100/((Date-DatePrev)*Total) ) %>%
ungroup()
data_total <- d %>%
group_by(Date) %>% summarize(
Total = sum(Total))  %>%
mutate(TotalPrev = lag(Total, default = 0, order_by = Date ), DatePrev = lag(Date, order_by = Date )) %>%
filter(is.na(DatePrev)) %>% mutate(DelDay = as.integer(Date-DatePrev)) %>%
mutate( Rate1 = (Total - TotalPrev)*100/(DelDate*Total) ) %>%
ungroup()
data_total <- d %>%
group_by(Date) %>% summarize(
Total = sum(Total))  %>%
mutate(TotalPrev = lag(Total, default = 0, order_by = Date ), DatePrev = lag(Date, order_by = Date )) %>%
filter(is.na(DatePrev)) %>% mutate(DelDay = as.integer(Date-DatePrev)) %>%
mutate( Rate1 = (Total - TotalPrev)*100/(DelDay*Total) ) %>%
ungroup()
View(data_total)
data_total <- d %>%
group_by(Date) %>% summarize(
Total = sum(Total))  %>%
mutate(TotalPrev = lag(Total, default = 0, order_by = Date ), DatePrev = lag(Date, order_by = Date )) %>%
filter(!is.na(DatePrev)) %>% mutate(DelDay = as.integer(Date-DatePrev)) %>%
mutate( Rate1 = (Total - TotalPrev)*100/(DelDay*Total) ) %>%
ungroup()
source('~/work/covid19/covid19_timeseries_animation/GlobalGrowthRate.R')
setwd("~/work/covid19/covid19_timeseries_animation")
rebuild_dataframe <- T
yesterday <- Sys.Date()
pal <- "magma"
if (rebuild_dataframe) {
d <- source_world_data()
}
data_total <- d %>%
group_by(Date) %>% summarize(
Total = sum(Total))  %>%
mutate(TotalPrev = lag(Total, default = 0, order_by = Date ), DatePrev = lag(Date, order_by = Date )) %>%
filter(!is.na(DatePrev)) %>% mutate(DelDay = as.integer(Date-DatePrev)) %>%
mutate( Rate1 = (Total - TotalPrev)*100/(DelDay*Total) ) %>%
ungroup()
View(d)
data_total <- d %>% pivot_longer(-c(StateUt, Country, Lat, Long, Date), values_to = Total, names_to = Status)
data_total <- d %>%
pivot_longer(-c(StateUt, Country, Lat, Long, Date), values_to = 'Total', names_to = 'Status')
View(data_total)
data_total <- d %>%
pivot_longer(-c(StateUt, Country, Lat, Long, Date), values_to = 'Total', names_to = 'Status') %?%
group_by(Date, Status) %>% summarize(
Total = sum(Total))  %>%
mutate(TotalPrev = lag(Total, default = 0, order_by = Date ), DatePrev = lag(Date, order_by = Date )) %>%
filter(!is.na(DatePrev)) %>% mutate(DelDay = as.integer(Date-DatePrev)) %>%
mutate( Rate1 = (Total - TotalPrev)*100/(DelDay*Total) ) %>%
ungroup()
data_total <- d %>%
pivot_longer(-c(StateUt, Country, Lat, Long, Date), values_to = 'Total', names_to = 'Status')
data_rate <- data_total %>%
group_by(Date, Status) %>% summarize(
Total = sum(Total))  %>%
mutate(TotalPrev = lag(Total, default = 0, order_by = Date ), DatePrev = lag(Date, order_by = Date )) %>%
filter(!is.na(DatePrev)) %>% mutate(DelDay = as.integer(Date-DatePrev)) %>%
mutate( Rate1 = (Total - TotalPrev)*100/(DelDay*Total) ) %>%
ungroup()
View(data_rate)
d <- source_world_data()
data_total <- d %>%
pivot_longer(-c(StateUt, Country, Lat, Long, Date), values_to = 'Total', names_to = 'Status')
data_total <- d %>% select(-c(Lat, Long)) %>%
pivot_longer(-c(StateUt, Country,  Date), values_to = 'Total', names_to = 'Status')
View(data_total)
data_long <- d %>% select(-c(Lat, Long))
View(data_long)
data_long <- d %>% select(-c(Lat, Long)) %>%
pivot_longer(-c(StateUt, Country,  Date), values_to = 'Total', names_to = 'Status')
View(data_long)
data_rate <- data_long %>%
group_by(Date, Status) %>%
summarize( Total = sum(Total) )
View(data_rate)
data_rate <- data_long %>%
group_by(Date, Status) %>%
summarize( Total = sum(Total) )  %>% ungroup() %>%
group_by(Status) %>%
mutate(TotalPrev = lag(Total, default = 0, order_by = Date ), DatePrev = lag(Date, order_by = Date )) %>%
filter(!is.na(DatePrev)) %>% mutate(DelDay = as.integer(Date-DatePrev)) %>%
mutate( Rate1 = (Total - TotalPrev)*100/(DelDay*Total) ) %>%
ungroup()
View(data_rate)
data_long <- d %>% select(-c(Lat, Long)) %>%
pivot_longer(-c(StateUt, Country,  Date), values_to = 'Total', names_to = 'Status')
data_rate <- data_long %>%
group_by(Date, Status) %>%
summarize( Total = sum(Total) )  %>% ungroup() %>%
group_by(Status) %>%
mutate(TotalPrev = lag(Total, default = 0, order_by = Date ), DatePrev = lag(Date, order_by = Date )) %>%
filter(!is.na(DatePrev)) %>% mutate(DelDay = as.integer(Date-DatePrev)) %>%
mutate( Rate1 = (Total - TotalPrev)*100/(DelDay*Total) ) %>%
ungroup()
p1 <- ggplot(data = data_rate,  aes(x = Date, y = Rate1, color = Type, fill = Type)) +
geom_smooth(aes(group = Type), alpha = 0.2, size = 0.6, linetype=1) +
geom_point(alpha = 0.2, size=2) + geom_line(alpha = 0.4) +
labs(y = "Growth rate in Percentage") + # labs(title = "Groth rate by date") +
scale_fill_viridis_d(option=pal, end = 0.6) +
scale_color_viridis_d(option=pal, end = 0.6) +
ylim(c(-10, 50)) +
plot_theme
plot_theme <- theme_minimal() + theme(
axis.text=element_text(size=8, color = "darkgrey"),
axis.title=element_text(size=10),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
plot.title = element_text(size = 12, hjust = 0),
legend.title = element_blank(),
)
p1 <- ggplot(data = data_rate,  aes(x = Date, y = Rate1, color = Type, fill = Type)) +
geom_smooth(aes(group = Type), alpha = 0.2, size = 0.6, linetype=1) +
geom_point(alpha = 0.2, size=2) + geom_line(alpha = 0.4) +
labs(y = "Growth rate in Percentage") + # labs(title = "Groth rate by date") +
scale_fill_viridis_d(option=pal, end = 0.6) +
scale_color_viridis_d(option=pal, end = 0.6) +
ylim(c(-10, 50)) +
plot_theme
print(p1)
View(data_rate)
p1 <- ggplot(data = data_rate,  aes(x = Date, y = Rate1, color = Status, fill = Status)) +
geom_smooth(aes(group = Status), alpha = 0.2, size = 0.6, linetype=1) +
geom_point(alpha = 0.2, size=2) + geom_line(alpha = 0.4) +
labs(y = "Growth rate in Percentage") + # labs(title = "Groth rate by date") +
scale_fill_viridis_d(option=pal, end = 0.6) +
scale_color_viridis_d(option=pal, end = 0.6) +
ylim(c(-10, 50)) +
plot_theme
print(p1)
data_long <- d %>% select(-c(Lat, Long)) %>% filter(Date > from) %>%
pivot_longer(-c(StateUt, Country,  Date), values_to = 'Total', names_to = 'Status')
data_rate <- data_long %>%
group_by(Date, Status) %>%
summarize( Total = sum(Total) )  %>% ungroup() %>%
group_by(Status) %>%
mutate(TotalPrev = lag(Total, default = 0, order_by = Date ), DatePrev = lag(Date, order_by = Date )) %>%
filter(!is.na(DatePrev)) %>% mutate(DelDay = as.integer(Date-DatePrev)) %>%
mutate( Rate1 = (Total - TotalPrev)*100/(DelDay*Total) ) %>%
ungroup()
plot_theme <- theme_minimal() + theme(
axis.text=element_text(size=8, color = "darkgrey"),
axis.title=element_text(size=10),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
plot.title = element_text(size = 12, hjust = 0),
legend.title = element_blank(),
)
p1 <- ggplot(data = data_rate,  aes(x = Date, y = Rate1, color = Status, fill = Status)) +
geom_smooth(aes(group = Status), alpha = 0.2, size = 0.6, linetype=1) +
geom_point(alpha = 0.2, size=2) + geom_line(alpha = 0.4) +
labs(y = "Growth rate in Percentage") + # labs(title = "Groth rate by date") +
scale_fill_viridis_d(option=pal, end = 0.6) +
scale_color_viridis_d(option=pal, end = 0.6) +
ylim(c(-10, 50)) +
plot_theme
print(p1)
data_long <- d %>% select(-c(Lat, Long)) %>% filter(Date > from) %>%
pivot_longer(-c(StateUt, Country,  Date), values_to = 'Total', names_to = 'Status')
data_rate <- data_long %>%
group_by(Date, Status) %>%
summarize( Total = sum(Total) )  %>% ungroup() %>%
group_by(Status) %>%
mutate(TotalPrev = lag(Total, default = 0, order_by = Date ), DatePrev = lag(Date, order_by = Date )) %>%
filter(!is.na(DatePrev)) %>% mutate(DelDay = as.integer(Date-DatePrev)) %>%
mutate( Rate1 = (Total - TotalPrev)*100/(DelDay*Total) ) %>%
ungroup() %>%
filter(!(Status %in% c('Hospitalized', 'Deaths')))
plot_theme <- theme_minimal() + theme(
axis.text=element_text(size=8, color = "darkgrey"),
axis.title=element_text(size=10),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
plot.title = element_text(size = 12, hjust = 0),
legend.title = element_blank(),
)
p1 <- ggplot(data = data_rate,  aes(x = Date, y = Rate1, color = Status, fill = Status)) +
geom_smooth(aes(group = Status), alpha = 0.2, size = 0.6, linetype=1) +
geom_point(alpha = 0.2, size=2) + geom_line(alpha = 0.4) +
labs(y = "Growth rate in Percentage") + # labs(title = "Groth rate by date") +
scale_fill_viridis_d(option=pal, end = 0.6) +
scale_color_viridis_d(option=pal, end = 0.6) +
ylim(c(-10, 50)) +
plot_theme
print p1
print(p1)
data_total <- data_long %>%
group_by(Date, Status) %>%
summarize( Total = sum(Total) )  %>% ungroup()
View(p1)
View(data_total)
View(data_total)
p2 <- ggplot(data = data_total, aes(x = Date, y = Total/1000, fill = Status)) +
geom_bar(position = "stack", stat = "identity") +
# scale_y_continuous(trans = 'log2') +
labs(y = "Number of cases (thousands)") + # labs(title = "Reported number of cases by date") +
scale_fill_viridis_d(option=pal, begin = 0, end = 0.9) +
scale_color_viridis_d(option=pal, begin = 0, end = 0.9) +
plot_theme +
theme(legend.position = c(0.2, 0.6) )
print(p2)
source('~/work/covid19/covid19_timeseries_animation/GlobalGrowthRate.R')
source('~/work/covid19/covid19_timeseries_animation/GlobalGrowthRate.R')
source('~/work/covid19/covid19_timeseries_animation/GlobalGrowthRate.R')
source('~/work/covid19/covid19_timeseries_animation/GlobalGrowthRate.R')
source('~/work/covid19/covid19_timeseries_animation/GlobalGrowthRate.R')
source('~/work/covid19/covid19_timeseries_animation/GlobalGrowthRate.R')
source('~/work/covid19/covid19_timeseries_animation/GlobalGrowthRate.R')
source('~/work/covid19/covid19_timeseries_animation/GlobalGrowthRate.R')
source('~/work/covid19/covid19_timeseries_animation/GlobalGrowthRate.R')
source('~/work/covid19/covid19_timeseries_animation/GlobalGrowthRate.R')
source('~/work/covid19/covid19_timeseries_animation/GlobalGrowthRate.R')
source('~/work/covid19/covid19_timeseries_animation/GlobalGrowthRate.R')
source('~/work/covid19/covid19_timeseries_animation/GlobalGrowthRate.R')
