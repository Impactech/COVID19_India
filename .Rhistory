range = c(1, 10),
trans = "identity",
guide = "legend"
) + facet_wrap(~Source, ncol=2) +
coord_cartesian(clip = 'off')
ggplot(
data = data_statewise,
aes(x=Date, y=reorder(label, MaxCases),
fill = StateUt, size = Total^(0.3))
) +
geom_point(shape = 21, color = 'lightgrey') +
geom_vline(xintercept = dmy('24-03-2020'), linetype = '11' ) +
annotate(
"text", x = dmy('25-03-2020'), y = 34,
size = 5, label = "Lockdown", hjust = 0, fontface =2 ) +
theme_minimal() +
theme(
legend.position = 'off',
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.y = element_text(size=10,face="bold")
) +
scale_color_viridis_d(option="inferno", end = 0.9) +
scale_fill_viridis_d(option="inferno", end = 0.9) +
scale_y_discrete(position = "right") +
scale_radius(
range = c(1, 10),
trans = "identity",
guide = "legend"
) +
coord_cartesian(clip = 'off')
View(data_statewise)
ggplot(
data = data_statewise %>% filter(Source == 'Crowd Source'),
aes(x=Date, y=reorder(label, MaxCases),
fill = StateUt, size = Total^(0.3))
) +
geom_point(shape = 21, color = 'lightgrey') +
geom_vline(xintercept = dmy('24-03-2020'), linetype = '11' ) +
annotate(
"text", x = dmy('25-03-2020'), y = 34,
size = 5, label = "Lockdown", hjust = 0, fontface =2 ) +
theme_minimal() +
theme(
legend.position = 'off',
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.y = element_text(size=10,face="bold")
) +
scale_color_viridis_d(option="inferno", end = 0.9) +
scale_fill_viridis_d(option="inferno", end = 0.9) +
scale_y_discrete(position = "right") +
scale_radius(
range = c(1, 10),
trans = "identity",
guide = "legend"
) +
coord_cartesian(clip = 'off')
from <- dmy('1-02-20')
d_w_wide <- source_world_data()
data_w_long <- d_w_wide %>% select(-c(Lat, Long)) %>% filter(Date > from) %>%
pivot_longer(-c(StateUt, Country,  Date), values_to = 'Total', names_to = 'Status')
data_total_w <- data_w_long %>%
group_by(Date, Status) %>%
summarize( Total = sum(Total) )  %>% ungroup()
data_rate_w <- data_total_w %>%
group_by(Status) %>%
mutate(TotalPrev = lag(Total, default = 0, order_by = Date )) %>%
mutate(DatePrev = lag(Date, order_by = Date )) %>%
filter(!is.na(DatePrev)) %>% mutate(DelDay = as.integer(Date-DatePrev)) %>%
mutate( Rate1 = (Total - TotalPrev)*100/(DelDay*Total) ) %>%
ungroup() %>%
filter(!(Status %in% c('Hospitalized', 'Deaths')))
View(data_i_total)
View(data_i_total)
data_today <- data_i_aggregated_long %>%
filter(Date == Sys.Date()) %>%
pivot_wider(values_from = Cumulative, names_from = Source) %>%
select(-c(Date))
data_i_total <- rbind(data_panindia_total, data_states_total)
data_i_aggregated_long <- d_i_long %>%
group_by(Date, Source, Status) %>%
summarise(Cumulative = sum(Cumulative)) %>%
filter( Date > dmy('03-03-2020')) %>%
ungroup()
data_i_aggregated_long <- d_i_long %>%
group_by(Date, Source, Status) %>%
summarise(Cumulative = sum(Cumulative)) %>%
filter( Date > dmy('03-03-2020')) %>%
ungroup()
d_i_long <- d_i_wide %>% pivot_longer(
-c(StateUt, Date, Source),
values_to = 'Cumulative',
names_to = 'Status')
data_i_aggregated_long <- d_i_long %>%
group_by(Date, Source, Status) %>%
summarise(Cumulative = sum(Cumulative)) %>%
filter( Date > dmy('03-03-2020')) %>%
ungroup()
data_today <- data_i_aggregated_long %>%
filter(Date == Sys.Date()) %>%
pivot_wider(values_from = Cumulative, names_from = Source) %>%
select(-c(Date))
kable(data_today) %>% kable_styling(
bootstrap_options = c("striped", "hover"), full_width = F, position = 'float_right')
View(data_today)
data_today <- data_i_aggregated_long %>%
filter(Date == Sys.Date())
data_today <- data_i_aggregated_long %>%
filter(Date == Sys.Date() -1) %>%
pivot_wider(values_from = Cumulative, names_from = Source) %>%
select(-c(Date))
kable(data_today) %>% kable_styling(
bootstrap_options = c("striped", "hover"), full_width = F, position = 'float_right')
data_today <- data_i_aggregated_long %>%
filter(Date == max(Date)) %>%
pivot_wider(values_from = Cumulative, names_from = Source) %>%
select(-c(Date))
kable(data_today) %>% kable_styling(
bootstrap_options = c("striped", "hover"), full_width = F, position = 'float_right')
data_split_status <- data_i_aggregated_long %>% filter(Status != 'Total')
ggplot(data = data_split_status,  aes(x = Date, y = Cumulative, fill=Status)) +      theme_minimal() +
geom_area(stat = 'identity') + facet_wrap(~Source, ncol = 1) +
geom_text(
data = data_label,
aes(label = Cumulative), show.legend = F,
angle = 0, vjust = 0.5, hjust = 1, nudge_y = 0, nudge_x = -0.5) +
geom_vline(xintercept = dmy('24-03-2020'), linetype = '11' ) +
annotate(
"text", x = dmy('25-03-2020'), y = 2000,
size = 5, label = "Lockdown", hjust = 0, fontface =1 ) +
theme(legend.position = c(0.2, 0.8)) +
scale_fill_viridis_d(begin = 0.1, end = 1) + scale_color_viridis_d(begin = 0.1, end=1)
data_label <- data_i_aggregated_long %>% filter(Status == 'Total') %>%
filter( Date > Sys.Date()-5 )
data_split_status <- data_i_aggregated_long %>% filter(Status != 'Total')
ggplot(data = data_split_status,  aes(x = Date, y = Cumulative, fill=Status)) +      theme_minimal() +
geom_area(stat = 'identity') + facet_wrap(~Source, ncol = 1) +
geom_text(
data = data_label,
aes(label = Cumulative), show.legend = F,
angle = 0, vjust = 0.5, hjust = 1, nudge_y = 0, nudge_x = -0.5) +
geom_vline(xintercept = dmy('24-03-2020'), linetype = '11' ) +
annotate(
"text", x = dmy('25-03-2020'), y = 2000,
size = 5, label = "Lockdown", hjust = 0, fontface =1 ) +
theme(legend.position = c(0.2, 0.8)) +
scale_fill_viridis_d(begin = 0.1, end = 1) + scale_color_viridis_d(begin = 0.1, end=1)
data_rate <- d_i_wide  %>% select(StateUt, Date, Total, Source) %>%
group_by(Date, Source) %>%
summarise(Total = sum(Total)) %>% group_by(Source) %>%
mutate( TotalPrev = lag(Total, default = 0, order_by = Date)) %>%
mutate(  DatePrev = lag(Date, order_by = Date) ) %>%
mutate(DateCurPrev = as.integer(Date - DatePrev) ) %>%
filter( Date > ymd('2020-03-04')	) %>%
mutate( DailyRate = round((Total - TotalPrev)*100/(DateCurPrev*TotalPrev) ) ) %>%
ungroup()
ggplot(
data = data,
aes(x = Date, y = DailyRate, group = Source, color = Source, fill=Source)
) +
geom_vline(xintercept = dmy('24-03-2020'), linetype = '11' ) +
annotate(
"text", x = dmy('25-03-2020'), y = 34,
size = 5, label = "Lockdown", hjust = 0, fontface = 1 ) +
theme_minimal() +
geom_point(alpha = 0.3, size = 2) + geom_line(linetype = 1, alpha = 0.3) +
geom_smooth(alpha = 0.05, size=0.6) +
labs(y = "Growth rate in Percentage")  +
ylim(c(-10, 50)) +
theme(legend.position = c(0.2, 0.8) ) +
scale_fill_viridis_d(end = 0.6) + scale_color_viridis_d(end=0.6)
data_i_rate <- d_i_wide  %>% select(StateUt, Date, Total, Source) %>%
group_by(Date, Source) %>%
summarise(Total = sum(Total)) %>% group_by(Source) %>%
mutate( TotalPrev = lag(Total, default = 0, order_by = Date)) %>%
mutate(  DatePrev = lag(Date, order_by = Date) ) %>%
mutate(DateCurPrev = as.integer(Date - DatePrev) ) %>%
filter( Date > ymd('2020-03-04')	) %>%
mutate( DailyRate = round((Total - TotalPrev)*100/(DateCurPrev*TotalPrev) ) ) %>%
ungroup()
ggplot(
data = data_i_rate,
aes(x = Date, y = DailyRate, group = Source, color = Source, fill=Source)
) +
geom_vline(xintercept = dmy('24-03-2020'), linetype = '11' ) +
annotate(
"text", x = dmy('25-03-2020'), y = 34,
size = 5, label = "Lockdown", hjust = 0, fontface = 1 ) +
theme_minimal() +
geom_point(alpha = 0.3, size = 2) + geom_line(linetype = 1, alpha = 0.3) +
geom_smooth(alpha = 0.05, size=0.6) +
labs(y = "Growth rate in Percentage")  +
ylim(c(-10, 50)) +
theme(legend.position = c(0.2, 0.8) ) +
scale_fill_viridis_d(end = 0.6) + scale_color_viridis_d(end=0.6)
data_statewise <- data_i_total %>% group_by(Source) %>%
mutate(Day = as.integer(strftime(Date, format = "%j")) ) %>%
ungroup() %>%
###
group_by(StateUt, Source) %>%
mutate( DaysSince0 = Day - min(Day)  ) %>%
mutate( MaxDays = max(DaysSince0) ) %>%
mutate( MaxCases = max(Total) ) %>%
ungroup() %>%
###
mutate(label =  paste(MaxCases, StateUt, sep=" | ")) %>%
filter(Date > dmy('01-03-2020'))
ggplot(
data = data_statewise %>% filter(Source == 'Crowd Source'),
aes(x=Date, y=reorder(label, MaxCases),
fill = StateUt, size = Total^(0.3))
) +
geom_point(shape = 21, color = 'lightgrey') +
geom_vline(xintercept = dmy('24-03-2020'), linetype = '11' ) +
annotate(
"text", x = dmy('25-03-2020'), y = 34,
size = 5, label = "Lockdown", hjust = 0, fontface =2 ) +
theme_minimal() +
theme(
legend.position = 'off',
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.y = element_text(size=10,face="bold")
) +
scale_color_viridis_d(option="inferno", end = 0.9) +
scale_fill_viridis_d(option="inferno", end = 0.9) +
scale_y_discrete(position = "right") +
scale_radius(
range = c(1, 10),
trans = "identity",
guide = "legend"
) +
coord_cartesian(clip = 'off')
View(data_i_total)
data_statewise <- data_i_total %>% group_by(Source) %>%
mutate(Day = as.integer(strftime(Date, format = "%j")) ) %>%
ungroup() %>%
###
group_by(StateUt, Source) %>%
mutate( DaysSince0 = Day - min(Day)  ) %>%
mutate( MaxDays = max(DaysSince0) ) %>%
mutate( MaxCases = max(Total) ) %>%
ungroup() %>%
###
mutate(label =  paste(MaxCases, StateUt, sep=" | ")) %>%
filter(Date > dmy('01-03-2020'))
View(dc_i)
url <- 'https://docs.google.com/spreadsheets/d/e/2PACX-1vSc_2y5N0I67wDU38DjDh35IZSIS30rQf7_NYZhtYYGU1jJYT6_kDx4YpF-qw0LSlGsBYP8pqM_a1Pd/pub?output=csv'
dc <- read_csv(url) %>% clean_names() %>%
select(-c("source_1", "source_2", "source_3", "backup_notes", "notes", "estimated_onset_date")) %>%
filter(! is.na(date_announced) )
View(dc)
View(dc)
dtcs <- NULL
for (di in as.list( unique(dc$date) )) {
print(di)
dts <- dc %>%
filter(date <= di) %>% group_by(StateUt, Status) %>%
summarize(total = n() ) %>% mutate(Date = di, Source = 'Crowd Source')
dtcs <- rbind(dtcs, dts)
}
dtc <- dtcs %>%
pivot_wider(names_from = Status, values_from = total, values_fill = list(total = 0)) %>%
mutate(Total = Recovered + Hospitalized + Deceased + Migrated) %>% select(-c(Migrated))
library(tidyverse)
library(lubridate)
library(viridis)
library(readr)
library(janitor)
library(kableExtra)
url <- 'https://docs.google.com/spreadsheets/d/e/2PACX-1vSc_2y5N0I67wDU38DjDh35IZSIS30rQf7_NYZhtYYGU1jJYT6_kDx4YpF-qw0LSlGsBYP8pqM_a1Pd/pub?output=csv'
dc <- read_csv(url) %>% clean_names() %>%
select(-c("source_1", "source_2", "source_3", "backup_notes", "notes", "estimated_onset_date")) %>%
filter(! is.na(date_announced) ) %>%
mutate(date = dmy(date_announced)) %>%
select(date, detected_state, current_status) %>%
rename(StateUt = "detected_state", Status = "current_status" ) %>%
arrange(date)
dtcs <- NULL
for (di in as.list( unique(dc$date) )) {
print(di)
dts <- dc %>%
filter(date <= di) %>% group_by(StateUt, Status) %>%
summarize(total = n() ) %>% mutate(Date = di, Source = 'Crowd Source')
dtcs <- rbind(dtcs, dts)
}
dtc <- dtcs %>%
pivot_wider(names_from = Status, values_from = total, values_fill = list(total = 0)) %>%
mutate(Total = Recovered + Hospitalized + Deceased + Migrated) %>% select(-c(Migrated))
View(dts)
View(dtc)
build_crowd_data <- function () {
url <- 'https://docs.google.com/spreadsheets/d/e/2PACX-1vSc_2y5N0I67wDU38DjDh35IZSIS30rQf7_NYZhtYYGU1jJYT6_kDx4YpF-qw0LSlGsBYP8pqM_a1Pd/pub?output=csv'
dc <- read_csv(url) %>% clean_names()
url <- 'https://docs.google.com/spreadsheets/d/e/2PACX-1vSc_2y5N0I67wDU38DjDh35IZSIS30rQf7_NYZhtYYGU1jJYT6_kDx4YpF-qw0LSlGsBYP8pqM_a1Pd/pub?output=csv'
dc <- read_csv(url) %>% clean_names()
View(dc)
url <- 'https://docs.google.com/spreadsheets/d/e/2PACX-1vSc_2y5N0I67wDU38DjDh35IZSIS30rQf7_NYZhtYYGU1jJYT6_kDx4YpF-qw0LSlGsBYP8pqM_a1Pd/pub?output=csv'
dc <- read_csv(url) %>% clean_names() %>%
select(-c("source_1", "source_2", "source_3", "backup_notes", "notes", "estimated_onset_date")) %>%
filter(! is.na(date_announced) ) %>%
mutate(date = dmy(date_announced)) %>%
select(date, detected_state, current_city, age_bracket, current_status)
dc <- read_csv(url) %>% clean_names() %>%
select(-c("source_1", "source_2", "source_3", "backup_notes", "notes", "estimated_onset_date")) %>%
filter(! is.na(date_announced) ) %>%
mutate(date = dmy(date_announced)) %>%
select(date, detected_state, detected_city, age_bracket, current_status)
View(dc)
dc <- read_csv(url) %>% clean_names() %>%
select(-c("source_1", "source_2", "source_3", "backup_notes", "notes", "estimated_onset_date")) %>%
filter(! is.na(date_announced) ) %>%
mutate(Date = dmy(date_announced)) %>%
select(Date, detected_state, detected_city, age_bracket, current_status) %>%
rename(
StateUt = "detected_state",
City = "detected_city",
Status = "current_status",
AgeBracket = "age_bracket"
) %>%
arrange(Date)
dtcs <- NULL
for (di in as.list( unique(dc$Date) )) {
print(di)
dts <- dc %>%
filter(Date <= di) %>% group_by(StateUt, Status) %>%
summarize(total = n() ) %>% mutate(Date = di, Source = 'Crowd Source')
dtcs <- rbind(dtcs, dts)
}
dtc <- dtcs %>%
pivot_wider(names_from = Status, values_from = total, values_fill = list(total = 0)) %>%
mutate(Total = Recovered + Hospitalized + Deceased + Migrated) %>% select(-c(Migrated))
View(dtc)
source('~/work/covid19/COVID19_India/source_crowd_data.r')
list[dc,] <- build_crowd_data()
list[dtc, dc] <- build_crowd_data()
source('~/work/covid19/COVID19_India/source_crowd_data.r')
source('~/work/covid19/COVID19_India/source_crowd_data.r')
list[dtc, dc] <- build_crowd_data()
source('~/work/covid19/COVID19_India/source_crowd_data.r')
x <- build_crowd_data()
View(x)
dc_i = x[dc_i]
dc_i = x[1]
View(dc_i)
list[a, b] <- build_crowd_data()
list[dc_i, dc_raw_i] <- build_crowd_data()
source('~/work/covid19/COVID19_India/source_crowd_data.r')
list[dc_i, dc_raw_i] <- build_crowd_data()
x
x$dc_i
source('~/work/covid19/COVID19_India/source_crowd_data.r')
dc <- build_crowd_data()
dc_i <- dc$dc_i
dc_raw_i <- dc$dc_raw_i
View(dc_raw_i)
clc
cls
clean_names()
rm(list = ls(all. names = TRUE))
rm(list = ls(all.names = TRUE))
source('~/work/covid19/COVID19_India/IndiaAgewise.R')
View(dc_raw_i)
dc_age_i <- dc_raw_i %>% filter(!is.na(AgeBracket))
dc_age_i <- dc_raw_i %>% filter(!is.na(AgeBracket))
p <- ggplot(data = dc_raw_i, aes(x = AgeBracket)) +
geom_density()
print(p)
dc_age_i <- dc_raw_i %>% filter(!is.na(AgeBracket)) %>% ungroup()
p <- ggplot(data = dc_raw_i, aes(x = AgeBracket)) +
geom_density()
print(p)
View(dc_age_i)
?geom_density
dc_age_i <- dc_raw_i %>% filter(!is.na(AgeBracket)) %>% ungroup()
p <- ggplot(data = dc_age_i, aes(x = AgeBracket)) +
geom_density()
print(p)
source('~/work/covid19/COVID19_India/IndiaAgewise.R')
p <- ggplot(data = dc_age_i, aes(x = AgeBracket)) +
geom_histogram()
print(p)
source('~/work/covid19/COVID19_India/IndiaAgewise.R')
source('~/work/covid19/COVID19_India/IndiaAgewise.R')
source('~/work/covid19/COVID19_India/IndiaAgewise.R')
source('~/work/covid19/COVID19_India/IndiaAgewise.R')
geom_histogram()
?geom_histogram()
dc_age_i <- dc_raw_i %>% filter(!is.na(AgeBracket)) %>% ungroup()
p <- ggplot(data = dc_age_i, aes(x = AgeBracket)) +
geom_histogram(stat = "count", binwidth = 5)
source('~/work/covid19/COVID19_India/IndiaAgewise.R')
p <- ggplot(data = dc_age_i, aes(x = AgeBracket)) +
geom_histogram(stat = "count", bins = 10)
p <- ggplot(data = dc_age_i, aes(x = AgeBracket)) +
geom_histogram(stat = "bin", bins = 10)
print(p)
dc_age_i <- dc_raw_i %>%
filter(!is.na(AgeBracket)) %>%
mutate(AgeBracket = as.numeric(AgeBracket)) %>%
ungroup()
source('~/work/covid19/COVID19_India/IndiaAgewise.R')
View(dc_age_i)
source('~/work/covid19/COVID19_India/IndiaAgewise.R')
p <- ggplot(data = dc_age_i, aes(x = AgeBracket)) +
geom_density()
print(p)
p <- ggplot(data = dc_age_i, aes(x = AgeBracket)) +
geom_histogram(stat = "bin", binwidth = 5)
print(p)
p <- ggplot(data = dc_age_i, aes(x = AgeBracket, fill=Status)) +
geom_histogram(stat = "bin", binwidth = 5)
print(p)
source('~/work/covid19/COVID19_India/IndiaAgewise.R')
p <- ggplot(data = dc_age_i, aes(x = AgeBracket, fill=Status)) +
geom_histogram(stat = "bin", binwidth = 5) +
scale_fill_viridis_c()
print(p)
p <- ggplot(data = dc_age_i, aes(x = AgeBracket, fill=Status)) +
geom_histogram(stat = "bin", binwidth = 5) +
scale_fill_viridis_d()
print(p)
source('~/work/covid19/COVID19_India/IndiaAgewise.R')
source('~/work/covid19/COVID19_India/IndiaAgewise.R')
p <- ggplot(data = dc_age_i, aes(x = AgeBracket, fill=Status)) +
geom_density(stat = "bin", binwidth = 2, position = "stack") +
scale_fill_viridis_d()
print(p)
p <- ggplot(data = dc_age_i, aes(x = AgeBracket, fill=Status)) +
geom_density(stat = "bin",  position = "stack") +
scale_fill_viridis_d()
print(p)
p <- ggplot(data = dc_age_i, aes(x = AgeBracket, fill=Status)) +
geom_density(position = "stack") +
scale_fill_viridis_d()
print(p)
source('~/work/covid19/COVID19_India/IndiaAgewise.R')
p <- ggplot(data = dc_age_i, aes(x = AgeBracket, fill=Status)) +
geom_density(position = "dodge") + facet_wrap(~Status) +
scale_fill_viridis_d()
print(p)
source('~/work/covid19/COVID19_India/IndiaAgewise.R')
source('~/work/covid19/COVID19_India/IndiaAgewise.R')
source('~/work/covid19/COVID19_India/IndiaAgewise.R')
source('~/work/covid19/COVID19_India/IndiaAgewise.R')
source('~/work/covid19/COVID19_India/IndiaAgewise.R')
source('~/work/covid19/COVID19_India/IndiaAgewise.R')
source('~/work/covid19/COVID19_India/IndiaAgewise.R')
source('~/work/covid19/COVID19_India/IndiaAgewise.R')
source('~/work/covid19/COVID19_India/IndiaAgewise.R')
source('~/work/covid19/COVID19_India/IndiaAgewise.R')
source('~/work/covid19/COVID19_India/IndiaAgewise.R')
source('~/work/covid19/COVID19_India/IndiaAgewise.R')
source('~/work/covid19/COVID19_India/IndiaAgewise.R')
source('~/work/covid19/COVID19_India/IndiaAgewise.R')
source('~/work/covid19/COVID19_India/IndiaAgewise.R')
source('~/work/covid19/COVID19_India/IndiaAgewise.R')
source('~/work/covid19/COVID19_India/IndiaAgewise.R')
source('~/work/covid19/COVID19_India/IndiaAgewise.R')
source('~/work/covid19/COVID19_India/IndiaAgewise.R')
source('~/work/covid19/COVID19_India/IndiaAgewise.R')
library(tidyverse)
library(lubridate)
library(viridis)
library(readr)
library(janitor)
library(kableExtra)
# library(plotly)
source('./source_crowd_data.r')
source('./source_official_data.r')
source('./source_world_data.R')
dc <- build_crowd_data()
dc_i <- dc$dc_i
dc_raw_i <- dc$dc_raw_i  %>%
mutate(AgeBracket = as.numeric(AgeBracket)) %>%
filter(!is.na(AgeBracket)) %>%
ungroup()
View(dc_raw_i)
length(dc_age_i)
size(dc_age_i)
n(dc_age_i)
nrow(dc_age_i)
source('~/work/covid19/COVID19_India/IndiaAgewise.R')
library(tidyverse)
library(lubridate)
library(viridis)
library(readr)
library(janitor)
library(kableExtra)
source('./source_crowd_data.r')
if (T) {
dc <- build_crowd_data()
dc_i <- dc$dc_i
dc_raw_i <- dc$dc_raw_i
rm(dc)
dc_age_i <- dc_raw_i %>%
mutate(AgeBracket = as.numeric(AgeBracket)) %>%
filter(!is.na(AgeBracket)) %>%
ungroup()
}
p <- ggplot(data = dc_age_i, aes(x = AgeBracket, fill=Status)) +
geom_histogram(stat = "bin", position = "stack", bins = 40, color = 'white') +
scale_fill_viridis_d(option = 'magma')
print(p)
source('~/work/covid19/COVID19_India/IndiaAgewise.R')
